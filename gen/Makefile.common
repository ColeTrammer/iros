CFLAGS+=-std=c99

.PHONY: all
all: $(EXECUTABLE)

.PHONY: native
native: $(EXECUTABLE).native

$(EXECUTABLE): $(OBJS)
	$(LD) -o $@ $(OBJS) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS)

$(EXECUTABLE).native: $(OBJS:.o=.native.o)
	g++ -o $@ $(OBJS:.o=.native.o)

$(BUILDDIR)/%.native.o: $(ROOT)/%.c
	gcc -D_POSIX_C_SOURCE=201900 -D_XOPEN_SOURCE=201900 -DGEN_NATIVE -MD -o $@ -c $< $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -g

$(BUILDDIR)/%.native.o: $(ROOT)/%.cpp
	g++ -D_POSIX_C_SOURCE=201900 -D_XOPEN_SOURCE=201900 -DGEN_NATIVE -MD -o $@ -c $< $(CPPFLAGS) $(LDFLAGS) -g

# Builds any .o file from its .c or .S, and generates its makefile dependencies with -MD
$(BUILDDIR)/%.o: $(ROOT)/%.c
	$(CC) -MD -o $@ -c $< $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -D_OS_2_SOURCE

$(BUILDDIR)/%.o: $(ROOT)/%.cpp
	$(CXX) -MD -o $@ -c $< $(CPPFLAGS) $(LDFLAGS) -D_OS_2_SOURCE

.PHONY: install
install: all
	cp --preserve=timestamps $(EXECUTABLE) $(SYSROOT)/bin

.PHONY: install-headers
install-headers:
	cp -R --preserve=timestamps -u $(ROOT)/gen/$(PROJECT_NAME)/include/. $(SYSROOT)/usr/include

# Includes the .d files for each object, if it exists.
# This will cause any object that depends on a specific header,
# that was changed, to be recompiled, as this include will 
# tell make its dependencies, which if altered, will cause
# make to go back and rebuild the object.
-include $(OBJS:.o=.d)
-include $(OBJS:.o=.native.d)

diff --git a/Modules/CMakePlatformId.h.in b/Modules/CMakePlatformId.h.in
index 0b81c88..67045c3 100644
--- a/Modules/CMakePlatformId.h.in
+++ b/Modules/CMakePlatformId.h.in
@@ -14,6 +14,9 @@
 #elif defined(__APPLE__)
 # define PLATFORM_ID "Darwin"
 
+#elif defined(__os_2__)
+# define PLATFORM_ID "Os_2"
+
 #elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
 # define PLATFORM_ID "Windows"
 
diff --git a/Modules/Platform/Os_2.cmake b/Modules/Platform/Os_2.cmake
new file mode 100644
index 0000000..635f333
--- /dev/null
+++ b/Modules/Platform/Os_2.cmake
@@ -0,0 +1,14 @@
+set(CMAKE_DL_LIBS "dl")
+set(CMAKE_C_COMPILE_OPTIONS_PIC "-fPIC")
+set(CMAKE_C_COMPILE_OPTIONS_PIE "-fPIE")
+set(CMAKE_SHARED_LIBRARY_C_FLAGS "-fPIC")
+set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-shared")
+set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")
+set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,")
+set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP ":")
+set(CMAKE_SHARED_LIBRARY_RPATH_ORIGIN_TOKEN "\$ORIGIN")
+set(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,")
+set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname,")
+set(CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic")
+
+include(Platform/UnixPaths)
diff --git a/Source/CTest/cmCTestTestHandler.cxx b/Source/CTest/cmCTestTestHandler.cxx
index 70e84ee..f4dc67e 100644
--- a/Source/CTest/cmCTestTestHandler.cxx
+++ b/Source/CTest/cmCTestTestHandler.cxx
@@ -580,7 +580,7 @@ void cmCTestTestHandler::LogTestSummary(const std::vector<std::string>& passed,
   }
   cmCTestLog(this->CTest, HANDLER_OUTPUT,
              std::endl
-               << passColorCode << std::lround(percent) << "% tests passed"
+               << passColorCode << roundf(percent) << "% tests passed"
                << this->CTest->GetColorCode(cmCTest::Color::CLEAR_COLOR)
                << ", " << failedColorCode << failed.size() << " tests failed"
                << this->CTest->GetColorCode(cmCTest::Color::CLEAR_COLOR)
diff --git a/Source/LexerParser/cmCTestResourceGroupsLexer.cxx b/Source/LexerParser/cmCTestResourceGroupsLexer.cxx
index de07c46..2450870 100644
--- a/Source/LexerParser/cmCTestResourceGroupsLexer.cxx
+++ b/Source/LexerParser/cmCTestResourceGroupsLexer.cxx
@@ -665,7 +665,23 @@ Modify cmCTestResourceGroupsLexer.cxx:
 
 #include <string>
 
-#include <cstddef>
+#ifdef __os_2__
+namespace std {
+
+long stoll(const std::string& str, std::size_t* pos = 0, int base = 10)
+{
+  char* end;
+  long ret = strtol(str.c_str(), &end, base);
+  if (pos) {
+    *pos = end - str.c_str();
+  }
+  return ret;
+}
+
+}
+#endif
+
+#  include <cstddef>
 
 /*--------------------------------------------------------------------------*/
 
diff --git a/Source/LexerParser/cmExprLexer.cxx b/Source/LexerParser/cmExprLexer.cxx
index 72e59b6..6b743e0 100644
--- a/Source/LexerParser/cmExprLexer.cxx
+++ b/Source/LexerParser/cmExprLexer.cxx
@@ -992,11 +992,11 @@ YY_RULE_SETUP
 	YY_BREAK
 case 2:
 YY_RULE_SETUP
-{ yylvalp->Number = std::stoll(yytext, nullptr, 10); return exp_NUMBER; }
+{ yylvalp->Number = strtoll(yytext, nullptr, 10); return exp_NUMBER; }
 	YY_BREAK
 case 3:
 YY_RULE_SETUP
-{  yylvalp->Number = std::stoll(yytext, nullptr, 16); return exp_NUMBER; }
+{  yylvalp->Number = strtoll(yytext, nullptr, 16); return exp_NUMBER; }
 	YY_BREAK
 case 4:
 YY_RULE_SETUP
diff --git a/Source/cmELF.cxx b/Source/cmELF.cxx
index a8d81f7..825a71a 100644
--- a/Source/cmELF.cxx
+++ b/Source/cmELF.cxx
@@ -201,15 +201,15 @@ protected:
 };
 
 // Configure the implementation template for 32-bit ELF files.
-struct cmELFTypes32
-{
-  using ELF_Ehdr = Elf32_Ehdr;
-  using ELF_Shdr = Elf32_Shdr;
-  using ELF_Dyn = Elf32_Dyn;
-  using ELF_Half = Elf32_Half;
-  using tagtype = ::uint32_t;
-  static const char* GetName() { return "32-bit"; }
-};
+// struct cmELFTypes32
+// {
+//   using ELF_Ehdr = Elf32_Ehdr;
+//   using ELF_Shdr = Elf32_Shdr;
+//   using ELF_Dyn = Elf32_Dyn;
+//   using ELF_Half = Elf32_Half;
+//   using tagtype = ::uint32_t;
+//   static const char* GetName() { return "32-bit"; }
+// };
 
 // Configure the implementation template for 64-bit ELF files.
 #ifndef _SCO_DS
@@ -724,13 +724,13 @@ cmELF::cmELF(const char* fname)
 
   // Check the class of the file and construct the corresponding
   // parser implementation.
-  if (ident[EI_CLASS] == ELFCLASS32) {
-    // 32-bit ELF
-    this->Internal = cm::make_unique<cmELFInternalImpl<cmELFTypes32>>(
-      this, std::move(fin), order);
-  }
+  // if (ident[EI_CLASS] == ELFCLASS32) {
+  //   // 32-bit ELF
+  //   this->Internal = cm::make_unique<cmELFInternalImpl<cmELFTypes32>>(
+  //     this, std::move(fin), order);
+  // }
 #ifndef _SCO_DS
-  else if (ident[EI_CLASS] == ELFCLASS64) {
+  if (ident[EI_CLASS] == ELFCLASS64) {
     // 64-bit ELF
     this->Internal = cm::make_unique<cmELFInternalImpl<cmELFTypes64>>(
       this, std::move(fin), order);
diff --git a/Source/cmFileCommand.cxx b/Source/cmFileCommand.cxx
index 550ad6e..41bac44 100644
--- a/Source/cmFileCommand.cxx
+++ b/Source/cmFileCommand.cxx
@@ -1453,7 +1453,7 @@ public:
     long OldPercentage = this->CurrentPercentage;
 
     if (total > 0.0) {
-      this->CurrentPercentage = std::lround(value / total * 100.0);
+      this->CurrentPercentage = roundf(value / total * 100.0);
       if (this->CurrentPercentage > 100) {
         // Avoid extra progress reports for unexpected data beyond total.
         this->CurrentPercentage = 100;
diff --git a/Source/cmForEachCommand.cxx b/Source/cmForEachCommand.cxx
index 3b82e0a..cd289ec 100644
--- a/Source/cmForEachCommand.cxx
+++ b/Source/cmForEachCommand.cxx
@@ -358,7 +358,7 @@ bool HandleInMode(std::vector<std::string> const& args,
 bool TryParseInteger(cmExecutionStatus& status, const std::string& str, int& i)
 {
   try {
-    i = std::stoi(str);
+    i = std::atoi(str.c_str());
   } catch (std::invalid_argument&) {
     std::ostringstream e;
     e << "Invalid integer: '" << str << "'";
diff --git a/Source/cmListCommand.cxx b/Source/cmListCommand.cxx
index edec613..e9d4e3b 100644
--- a/Source/cmListCommand.cxx
+++ b/Source/cmListCommand.cxx
@@ -33,6 +33,22 @@
 #include "cmSubcommandTable.h"
 #include "cmSystemTools.h"
 
+#ifdef __os_2__
+namespace std {
+
+int stoi(const std::string& str, std::size_t* pos = 0, int base = 10)
+{
+    char* end;
+    int ret = strtol(str.c_str(), &end, base);
+    if (pos) {
+        *pos = end - str.c_str();
+    }
+    return ret;
+}
+
+}
+#endif
+
 namespace {
 
 bool FilterRegex(std::vector<std::string> const& args, bool includeMatches,
@@ -749,7 +765,7 @@ bool HandleTransformCommand(std::vector<std::string> const& args,
     {
     }
 
-    operator const std::string&() const { return Name; }
+    operator const std::string &() const { return Name; }
 
     std::string Name;
     int Arity = 0;
diff --git a/Source/cmStandardLevelResolver.cxx b/Source/cmStandardLevelResolver.cxx
index 6dbab98..1111345 100644
--- a/Source/cmStandardLevelResolver.cxx
+++ b/Source/cmStandardLevelResolver.cxx
@@ -117,8 +117,8 @@ struct StanardLevelComputer
     int standardValue = -1;
     int defaultValue = -1;
     try {
-      standardValue = std::stoi(standardStr);
-      defaultValue = std::stoi(defaultStd);
+      standardValue = std::atoi(standardStr.c_str());
+      defaultValue = std::atoi(defaultStd);
     } catch (std::invalid_argument&) {
       // fall through as we want an error
       // when we can't find the bad value in the `stds` vector
@@ -196,7 +196,7 @@ struct StanardLevelComputer
     if (existingStandard) {
       existingLevelIter =
         std::find(cm::cbegin(this->Levels), cm::cend(this->Levels),
-                  std::stoi(*existingStandard));
+                  std::atoi((*existingStandard).c_str()));
       if (existingLevelIter == cm::cend(this->Levels)) {
         const std::string e =
           cmStrCat("The ", this->Language, "_STANDARD property on target \"",
@@ -241,7 +241,8 @@ struct StanardLevelComputer
     }
     // convert defaultStandard to an integer
     if (std::find(cm::cbegin(this->Levels), cm::cend(this->Levels),
-                  std::stoi(*defaultStandard)) == cm::cend(this->Levels)) {
+                  std::atoi((*defaultStandard).c_str())) ==
+        cm::cend(this->Levels)) {
       const std::string e = cmStrCat("The CMAKE_", this->Language,
                                      "_STANDARD_DEFAULT variable contains an "
                                      "invalid value: \"",
@@ -258,7 +259,7 @@ struct StanardLevelComputer
 
     auto existingLevelIter =
       std::find(cm::cbegin(this->Levels), cm::cend(this->Levels),
-                std::stoi(*existingStandard));
+                std::atoi((*existingStandard).c_str()));
     if (existingLevelIter == cm::cend(this->Levels)) {
       const std::string e =
         cmStrCat("The ", this->Language, "_STANDARD property on target \"",
@@ -305,8 +306,8 @@ struct StanardLevelComputer
   std::vector<std::string> LevelsAsStrings;
 };
 
-std::unordered_map<std::string, StanardLevelComputer> StandardComputerMapping =
-  {
+std::unordered_map<std::string, StanardLevelComputer>
+  StandardComputerMapping = {
     { "C",
       StanardLevelComputer{ "C", std::vector<int>{ 90, 99, 11 },
                             std::vector<std::string>{ "90", "99", "11" } } },
@@ -532,7 +533,8 @@ bool cmStandardLevelResolver::IsLaterStandard(std::string const& lang,
 {
   auto mapping = StandardComputerMapping.find(lang);
   if (mapping != cm::cend(StandardComputerMapping)) {
-    return mapping->second.IsLaterStandard(std::stoi(lhs), std::stoi(rhs));
+    return mapping->second.IsLaterStandard(std::atoi(lhs.c_str()),
+                                           std::atoi(rhs.c_str()));
   }
   return false;
 }
diff --git a/Source/kwsys/SystemInformation.cxx b/Source/kwsys/SystemInformation.cxx
index 9c34a56..14fcd3c 100644
--- a/Source/kwsys/SystemInformation.cxx
+++ b/Source/kwsys/SystemInformation.cxx
@@ -3635,7 +3635,7 @@ long long SystemInformationImplementation::GetHostMemoryAvailable(
   if (hostLimitEnvVarName) {
     const char* hostLimitEnvVarValue = getenv(hostLimitEnvVarName);
     if (hostLimitEnvVarValue) {
-      long long hostLimit = std::atoll(hostLimitEnvVarValue);
+      long long hostLimit = atoll(hostLimitEnvVarValue);
       if (hostLimit > 0) {
         memTotal = min(hostLimit, memTotal);
       }
@@ -3659,7 +3659,7 @@ long long SystemInformationImplementation::GetProcMemoryAvailable(
   if (procLimitEnvVarName) {
     const char* procLimitEnvVarValue = getenv(procLimitEnvVarName);
     if (procLimitEnvVarValue) {
-      long long procLimit = std::atoll(procLimitEnvVarValue);
+      long long procLimit = atoll(procLimitEnvVarValue);
       if (procLimit > 0) {
         memAvail = min(procLimit, memAvail);
       }
diff --git a/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp b/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp
index fc86505..e90a977 100644
--- a/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp
+++ b/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp
@@ -41,7 +41,7 @@
 #endif
 #else
 #include <cmath>
-#if !(defined(__QNXNTO__)) // QNX already defines isfinite
+#if !(defined(__QNXNTO__)) && !defined(__os_2__) // QNX already defines isfinite
 #define isfinite std::isfinite
 #endif
 #endif
diff --git a/Utilities/cmlibuv/CMakeLists.txt b/Utilities/cmlibuv/CMakeLists.txt
index 7625cf6..dbf1da9 100644
--- a/Utilities/cmlibuv/CMakeLists.txt
+++ b/Utilities/cmlibuv/CMakeLists.txt
@@ -213,6 +213,19 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
     )
 endif()
 
+if(CMAKE_SYSTEM_NAME STREQUAL "Os_2")
+  list(APPEND uv_headers
+    include/uv/posix.h
+    )
+  list(APPEND uv_sources
+    src/unix/no-fsevents.c
+    src/unix/no-proctitle.c
+    src/unix/posix-poll.c
+    src/unix/posix-hrtime.c
+    src/unix/procfs-exepath.c
+    )
+endif()
+
 if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD")
   list(APPEND uv_libraries
     kvm
diff --git a/Utilities/cmlibuv/include/uv.h b/Utilities/cmlibuv/include/uv.h
index 6f32b48..fd5c4e6 100644
--- a/Utilities/cmlibuv/include/uv.h
+++ b/Utilities/cmlibuv/include/uv.h
@@ -1223,8 +1223,10 @@ UV_EXTERN uv_pid_t uv_os_getppid(void);
 # define UV_PRIORITY_HIGHEST -20
 #endif
 
+#ifndef __os_2__
 UV_EXTERN int uv_os_getpriority(uv_pid_t pid, int* priority);
 UV_EXTERN int uv_os_setpriority(uv_pid_t pid, int priority);
+#endif
 
 UV_EXTERN int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count);
 UV_EXTERN void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count);
@@ -1719,11 +1721,13 @@ UV_EXTERN void uv_rwlock_wrlock(uv_rwlock_t* rwlock);
 UV_EXTERN int uv_rwlock_trywrlock(uv_rwlock_t* rwlock);
 UV_EXTERN void uv_rwlock_wrunlock(uv_rwlock_t* rwlock);
 
+#if 0
 UV_EXTERN int uv_sem_init(uv_sem_t* sem, unsigned int value);
 UV_EXTERN void uv_sem_destroy(uv_sem_t* sem);
 UV_EXTERN void uv_sem_post(uv_sem_t* sem);
 UV_EXTERN void uv_sem_wait(uv_sem_t* sem);
 UV_EXTERN int uv_sem_trywait(uv_sem_t* sem);
+#endif
 
 UV_EXTERN int uv_cond_init(uv_cond_t* cond);
 UV_EXTERN void uv_cond_destroy(uv_cond_t* cond);
diff --git a/Utilities/cmlibuv/include/uv/unix.h b/Utilities/cmlibuv/include/uv/unix.h
index f30562e..2d9e202 100644
--- a/Utilities/cmlibuv/include/uv/unix.h
+++ b/Utilities/cmlibuv/include/uv/unix.h
@@ -76,6 +76,8 @@
 # include "posix.h"
 #elif defined(__HAIKU__)
 # include "posix.h"
+#else
+# include "posix.h"
 #endif
 
 #ifndef NI_MAXHOST
@@ -108,6 +110,7 @@ struct uv__io_s {
   UV_IO_PRIVATE_PLATFORM_FIELDS
 };
 
+#define UV_PLATFORM_SEM_T long
 #ifndef UV_PLATFORM_SEM_T
 # define UV_PLATFORM_SEM_T sem_t
 #endif
diff --git a/Utilities/cmlibuv/src/unix/core.c b/Utilities/cmlibuv/src/unix/core.c
index 7b80ed5..7411654 100644
--- a/Utilities/cmlibuv/src/unix/core.c
+++ b/Utilities/cmlibuv/src/unix/core.c
@@ -1410,7 +1410,7 @@ uv_pid_t uv_os_getppid(void) {
   return getppid();
 }
 
-
+#ifndef __os_2__
 int uv_os_getpriority(uv_pid_t pid, int* priority) {
   int r;
 
@@ -1437,7 +1437,7 @@ int uv_os_setpriority(uv_pid_t pid, int priority) {
 
   return 0;
 }
-
+#endif
 
 int uv_os_uname(uv_utsname_t* buffer) {
   struct utsname buf;
diff --git a/Utilities/cmlibuv/src/unix/fs.c b/Utilities/cmlibuv/src/unix/fs.c
index f37749c..e99bc30 100644
--- a/Utilities/cmlibuv/src/unix/fs.c
+++ b/Utilities/cmlibuv/src/unix/fs.c
@@ -79,8 +79,9 @@
     defined(__NetBSD__)
 # include <sys/param.h>
 # include <sys/mount.h>
-#elif defined(__sun) || defined(__MVS__) || defined(__NetBSD__) || defined(__HAIKU__)
-# include <sys/statvfs.h>
+#elif defined(__sun) || defined(__MVS__) || defined(__NetBSD__) ||            \
+  defined(__HAIKU__) || defined(__os_2__)
+#  include <sys/statvfs.h>
 #else
 # include <sys/statfs.h>
 #endif
@@ -639,7 +640,8 @@ static int uv__fs_closedir(uv_fs_t* req) {
 
 static int uv__fs_statfs(uv_fs_t* req) {
   uv_statfs_t* stat_fs;
-#if defined(__sun) || defined(__MVS__) || defined(__NetBSD__) || defined(__HAIKU__)
+#if defined(__sun) || defined(__MVS__) || defined(__NetBSD__) ||              \
+  defined(__HAIKU__) || defined(__os_2__)
   struct statvfs buf;
 
   if (0 != statvfs(req->path, &buf))
@@ -656,7 +658,7 @@ static int uv__fs_statfs(uv_fs_t* req) {
     return -1;
   }
 
-#if defined(__sun) || defined(__MVS__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__HAIKU__)
+#if defined(__sun) || defined(__MVS__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__HAIKU__) || defined(__os_2__)
   stat_fs->f_type = 0;  /* f_type is not supported. */
 #else
   stat_fs->f_type = buf.f_type;
diff --git a/Utilities/cmlibuv/src/unix/thread.c b/Utilities/cmlibuv/src/unix/thread.c
index f93aa53..813f16c 100644
--- a/Utilities/cmlibuv/src/unix/thread.c
+++ b/Utilities/cmlibuv/src/unix/thread.c
@@ -501,7 +501,7 @@ static void glibc_version_check(void) {
       atoi(version + 2) < 21;
 }
 
-#elif defined(__MVS__)
+#elif defined(__MVS__) || defined(__os_2__)
 
 #define platform_needs_custom_semaphore 1
 
diff --git a/Utilities/cmlibuv/src/unix/udp.c b/Utilities/cmlibuv/src/unix/udp.c
index 21b922f..955946f 100644
--- a/Utilities/cmlibuv/src/unix/udp.c
+++ b/Utilities/cmlibuv/src/unix/udp.c
@@ -853,7 +853,7 @@ static int uv__udp_set_membership6(uv_udp_t* handle,
 }
 
 
-#if !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__ANDROID__)
+#if !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__ANDROID__) && !defined(__os_2__)
 static int uv__udp_set_source_membership4(uv_udp_t* handle,
                                           const struct sockaddr_in* multicast_addr,
                                           const char* interface_addr,
@@ -1028,7 +1028,7 @@ int uv_udp_set_source_membership(uv_udp_t* handle,
                                  const char* interface_addr,
                                  const char* source_addr,
                                  uv_membership membership) {
-#if !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__ANDROID__)
+#if !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__ANDROID__) && !defined(__os_2__)
   int err;
   struct sockaddr_storage mcast_addr;
   struct sockaddr_in* mcast_addr4;

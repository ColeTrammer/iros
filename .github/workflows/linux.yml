name: Linux CI

on:
  push:
    branches: [iris]
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linux_build_and_test:
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-latest
    strategy:
      matrix:
        preset: [gcc_debug_ubasan, gcc_release_dius_runtime, gcc_debug_coverage, clang_release_dius_runtime]
    steps:
      - run: |
          sudo apt-get -y update && sudo apt-get -y install gcc-12 g++-12 gcovr
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12
          sudo update-alternatives --set gcc /usr/bin/gcc-12
      - run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16
        if: matrix.preset == 'clang_release_dius_runtime'
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latest
          ninjaVersion: latest
      - name: Get and cache ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.preset }}
      - name: Build and test
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ${{ matrix.preset }}
          configurePresetAdditionalArgs: "['-DCMAKE_COMPILE_WARNING_AS_ERROR=ON']"
          buildPreset: ${{ matrix.preset }}
          testPreset: ${{ matrix.preset }}
      - name: Collect code coverage information
        run: |
          gcovr -j ${{env.nproc}} --delete --root . --print-summary --xml-pretty --xml coverage.xml build/host/gcc/debug/coverage
        if: matrix.preset == 'gcc_debug_coverage'
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ runner.os }}
          name: ${{ runner.os }}-coverage
          files: ./coverage.xml
        if: matrix.preset == 'gcc_debug_coverage'
